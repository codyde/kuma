// Code generated by vfsgen; DO NOT EDIT.

// +build !dev

package kongingress

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Templates statically implements the virtual filesystem provided to vfsgen.
var Templates = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2021, 3, 16, 16, 16, 16, 515618958, time.UTC),
		},
		"/kic": &vfsgen۰DirInfo{
			name:    "kic",
			modTime: time.Date(2021, 3, 16, 16, 16, 16, 515344436, time.UTC),
		},
		"/kic/kic.yaml": &vfsgen۰CompressedFileInfo{
			name:             "kic.yaml",
			modTime:          time.Date(2021, 3, 16, 16, 51, 22, 535420632, time.UTC),
			uncompressedSize: 18786,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xec\x5b\xdd\x73\xe3\xb6\x11\x7f\xd7\x5f\x81\x71\xfa\xd0\x66\x4a\x4a\xba\x73\xa6\x57\xde\xe4\xc1\xb1\xaf\x17\x37\x77\xb2\xc6\xf6\xa5\xe9\x64\x52\x0e\x04\xae\x44\x54\x20\xc0\x00\xa0\x6c\xe5\x7a\xff\x7b\x07\xfc\xfe\x00\x49\xc9\x71\x9c\x8f\xf1\xdc\xcb\x09\x5c\x2c\x76\x17\xbb\xbf\xdd\x05\x60\x1c\xd3\x6f\x41\x2a\x2a\xb8\x87\x70\x4c\xe1\x5e\x03\x37\xbf\x94\xbb\x7d\xa5\x5c\x2a\xa6\xbb\xf9\x0a\x34\x9e\x4f\xb6\x94\x07\x1e\x3a\x4f\x94\x16\xd1\x35\x28\x91\x48\x02\x17\xb0\xa6\x9c\x6a\x2a\xf8\x24\x02\x8d\x03\xac\xb1\x37\x41\x88\xe3\x08\x3c\xb4\x15\x7c\x43\x58\xa2\x34\xc8\x98\x25\x1b\xca\x95\x4b\x04\x5f\xd3\x4d\x22\xb1\x99\xe2\x1a\x82\xf0\x47\x97\x88\x68\xa2\x62\x20\x66\x26\x0e\x82\x94\x1d\x66\x4b\x49\xb9\x06\x79\x2e\x58\x12\x71\x65\xbe\x21\xe4\xa0\x7f\xde\x5c\x2d\x96\x58\x87\x1e\x72\x33\x9e\xe9\x38\x42\x01\x28\x22\x69\xac\x53\x35\x16\x38\x02\x24\xd6\x48\x87\x80\x1a\x54\x99\x5c\xcb\x74\xc8\xb9\xdd\xc7\x90\x8f\xeb\x7d\x0c\x1e\x52\x5a\x52\xbe\xe9\x2e\x54\x68\xe6\x12\x09\xa9\xe0\xb7\x34\x02\xa5\x71\x14\xdb\x16\x3f\xdb\x40\x63\xb5\xea\x77\xb6\x4a\x80\x35\x74\xd7\x08\xa8\xc2\x2b\x06\x81\x8d\xe3\x25\x0f\x28\xc1\x1a\x14\xa2\x75\x9d\x10\x55\xa8\x35\x2d\x5b\xf1\xa2\x39\x18\x4b\x2a\x24\xd5\x7b\x0f\xcd\x1b\x82\xac\x84\x60\x80\x79\x57\x96\x6c\x93\x6c\x92\x9c\xd7\xb7\x6f\xc0\xc2\xe7\x75\x0e\x7d\xeb\x97\xe6\xde\x48\x91\xc4\x1e\xea\xf5\x8d\x8c\x6b\xee\x02\x99\x17\x7e\x23\xf8\xe6\x3c\x73\xad\x65\xb5\x7c\xcc\x12\x89\x99\xcd\xf1\xd2\xcf\x2a\x14\x52\x2f\x2a\x56\x46\xed\x2d\x31\x9b\xa8\x88\x30\x12\xe5\x1c\x27\x08\xed\x30\xa3\x41\x2a\x48\x46\x2a\x62\xe0\x67\xcb\xcb\x6f\x5f\xde\x90\x10\x22\xec\x95\xaa\x89\x18\xa4\xa6\x15\x47\x94\xab\x51\xfd\x2e\xd4\x15\xab\xff\x02\xd1\xe5\x70\xb1\x73\x5d\xc2\xfa\xbe\xe4\x5a\x6d\x28\xef\xd2\xd5\xdc\x35\x97\x45\x0b\x22\x98\xaa\x53\x52\x0d\x51\x63\x00\x21\xe0\x49\xd4\x1c\x31\x76\x08\xb5\x8e\xad\x83\xaa\x33\xba\x91\x31\xb1\x0e\x76\x49\x35\xe9\x32\xd5\xac\x49\x67\x55\xa6\x18\xc6\x52\xe2\x7d\x39\x2a\x13\xee\x8b\x86\x25\xba\xca\x38\x68\x4d\xa5\xd2\xad\x31\x05\x44\xf0\xa0\x35\x88\x19\x1b\x36\xaa\x84\x1f\x13\x2a\xeb\x7b\xe4\x54\xde\xbe\x2b\x40\x73\x37\x9f\x38\x8e\x33\xf9\x85\x71\x54\x70\x95\x44\x20\x1f\x17\x42\x13\x05\xd2\xac\x61\x8b\xf5\x0f\xf9\x37\x13\xe6\x38\x0d\x38\x13\xd6\xa9\x10\x8d\x58\xff\xd0\xe4\xf1\x2b\x40\xe9\x43\xf1\xa3\xae\x4d\x03\x3a\x0a\x5b\x0f\xa0\x46\x05\x1a\xe9\xa7\x18\x93\x14\x6f\x7f\x0e\x6e\x48\x08\x80\x6b\x8a\x47\x23\xf8\x88\x88\x21\xa9\x97\xf9\x34\x18\x85\x8f\xc2\x15\x06\x08\x9f\xd8\xe3\x2b\x7b\x3c\xaa\xcf\xeb\x2a\xed\x37\x9c\xcd\x94\x03\xc6\xd7\xab\x75\x9b\x29\xad\x1c\x76\xf4\x6f\xa9\x70\x28\x9c\xf5\x1a\xd6\x36\xa6\x57\x77\x1c\x64\x91\xa9\xfb\x54\xcb\x59\x38\x15\x8f\x47\xca\xd0\xcd\xf5\x1a\x31\x56\xed\xee\x2f\x10\x4a\x95\x4d\x46\xfd\x3e\x1d\x3c\x3e\x0d\x74\xcd\x9e\xe6\xb6\xcc\x33\x9e\x36\x50\x28\xdf\x48\x50\x0a\x0e\x08\x93\x07\xee\xe3\x65\xb6\x42\x67\x13\xcb\x95\xfb\x81\x92\x3e\xfe\xee\xc6\x52\xdc\xef\xeb\x5b\x66\x23\xca\xdd\x80\x03\xd1\xbe\xa6\x11\x88\x44\xb7\x8b\x9e\x88\x72\x1a\x25\x91\x87\x66\xad\x0f\x99\x0b\x18\x18\xd9\x94\xb9\x2e\x5f\xc9\xc4\x5c\x8b\x3a\xc6\x5a\x83\xe4\x1e\xfa\xcf\xd4\xfd\xfc\x4f\x56\x56\x1d\xa8\xae\xaa\xb5\x36\x37\x5b\x75\xd6\x53\x9f\xf5\x55\x68\x3d\x35\x5a\x5f\x95\x66\xaf\xd3\x6c\x95\xda\x80\x3a\x12\x70\xf0\x88\x76\x96\xa0\x65\x67\x3b\x1f\xc4\xe9\x4e\x52\x0d\x8f\x26\x99\xb5\x92\x97\x22\xd1\x70\x88\x3f\x86\x80\x03\x90\x1d\xad\xea\xb9\xcb\x3e\xb1\xa7\x0e\x18\xd9\x93\xbe\x9a\x60\x40\x95\x54\x4a\xe3\x52\xbe\x84\x80\x4a\x13\x3c\x4a\x63\x9d\x28\x9f\x88\x00\xbc\x83\xad\x1e\x81\x0e\x45\xd0\x11\xb7\x47\x87\x01\x0d\xfa\xe4\x37\x81\xe8\x87\x98\x07\x8c\xf2\xcd\xa1\x31\xb4\x9b\xd9\x06\xe7\x87\x87\x2c\x28\x90\x3b\xf0\x43\xa1\xb4\xdd\x16\xed\xd6\xad\xb7\x2f\x1b\xb0\x86\x5d\xfa\x5e\x0c\xe8\x47\x81\x5e\x1c\xe8\x47\x82\x3e\x2c\xb0\xa3\xc1\x83\x76\x4e\xc2\x06\xee\xfd\xf2\x4c\xe0\x60\x97\x32\x8b\xc4\xbe\x0d\x80\xed\xa6\x4f\x62\xa5\x25\xe0\xe8\x90\xc0\xc4\x6c\x63\xa4\x09\xa3\x43\x3d\x49\x8a\x84\x07\x8e\x14\x2b\xca\x2d\x5f\x4d\x6d\x40\x95\x06\xae\x9d\x10\xab\xd0\x16\x97\x0e\x62\x80\x95\x76\xf2\x14\x65\x6a\x81\x43\xdd\xd0\xb0\xf4\xd7\x98\xb1\x15\x26\x5b\xef\x41\xb3\xfc\x0c\x89\x8e\x9b\xdc\x6c\xbc\x0f\xa1\xf7\x89\x10\x5b\x0a\x0f\x9c\x36\xb0\xd7\x03\x73\x8f\xd5\x0c\x30\xd3\x21\x09\x81\x6c\x3b\xa1\x18\x0f\xa0\x31\x26\x9a\xee\xc0\x16\xa6\x43\xb3\xf2\xa2\x84\x24\x52\x02\x27\x7b\x3b\x41\x2d\x2d\xcd\x7b\x08\xfa\xa3\xa4\xa9\x57\xef\x0a\x63\x42\x16\x79\x20\x47\xff\x21\xb2\x81\xcc\x74\x8c\xc0\x63\xe9\xaa\xb6\x9c\x69\xef\x76\x98\x0d\xad\xd8\x9b\xd8\x8f\x17\x4a\x25\x84\xa4\x35\xee\x93\xac\xd7\x9b\x95\x1b\xbb\x62\x8b\x8c\x83\xca\xd1\x83\x6a\x86\x94\xc0\x5e\x30\x1d\xac\xef\xb8\xae\x09\x7f\x2c\x1f\x5d\x63\xca\x12\xf9\x44\x1b\xf4\x1c\x17\x05\x15\x79\x72\xcb\x8f\x38\xe5\x53\x06\xe2\xe0\xe7\x18\x2b\xf5\xc0\xec\xf0\x8c\xdb\x7f\x50\xdc\x7e\x86\xbb\x67\xb8\xfb\x83\xc2\x9d\x0e\x25\xa8\x50\xb0\xa0\xff\x74\xc2\xbe\x78\xff\x11\x84\x50\xfa\xd8\x4a\x5e\x31\xa1\xfb\x0f\x8c\xe6\x0f\x3c\xe1\x79\xda\x93\xdc\xe7\x57\x12\xcf\xaf\x24\x1e\xfb\x95\x44\xcf\xf3\x88\xd1\x77\x11\xf1\x2f\x72\x2d\xf3\xfc\x32\xe2\xf9\x65\xc4\x23\x82\xa6\x26\xf1\x11\xb7\x5f\x47\xa0\x66\x56\xf0\xb8\x4c\xe0\xe0\x2b\xcc\x30\x27\x20\xdd\x7c\xa5\xef\x3f\xff\xc1\xa5\x76\x4c\x0b\x02\x43\x50\x44\xbc\x99\x8c\x56\xf9\xec\x26\xd8\x65\x84\xbf\xab\x17\x13\xb7\xe7\x4b\xdb\x35\x60\x7d\x07\x7a\x10\x43\x25\x2b\x99\x6f\x66\xce\x31\xb3\xae\x87\x3e\x7e\xfa\x79\x80\x52\x73\xac\x31\x0c\x48\x95\x18\x23\xaa\x3b\xd8\x20\x44\x15\x1e\x35\x56\xbc\xcb\x84\xc1\xa1\xe7\xfe\xc3\x0d\xc0\x0a\x93\x2d\xf0\xc0\x5e\x0c\x8e\xf7\x0e\x0a\xe4\x8e\x12\x58\xb4\x1e\x78\x1c\x79\x2a\x54\xf2\x59\x0a\x39\x50\x97\xae\x85\x8c\xb0\x4e\xab\xab\x97\x2f\x26\x0f\x2f\x4b\x47\x8a\x52\xdb\x35\xcc\x41\x8a\xc4\xbd\xd2\x8f\x4b\x3e\x2c\xf5\x80\xc4\x7d\x3d\x8d\x66\x8f\xe3\x20\xc6\x1a\x3d\xdb\x3f\xd8\x99\x8d\x1f\x05\x0e\x36\x63\x0a\x88\x04\xdd\xef\x57\x07\xdc\x4e\x1e\x61\x2e\x7b\x30\x66\x68\x72\x50\x11\x9f\xe5\x99\x6a\x06\x26\x04\x62\x0d\xc1\xa2\x0d\x77\x27\x27\x0d\x98\x4b\x7f\x9a\x44\x99\x26\x10\xe5\xa1\xef\x7f\x30\xc8\xa6\x85\x84\x20\x87\xa0\x6c\xb0\x9d\xef\x76\x45\x56\xbb\xc9\x22\xe7\x8c\x10\x91\x70\xdd\xd3\x00\x38\x79\x7c\xe1\x9c\x2a\xc7\x61\x83\xa4\x1e\xfa\xf8\x11\xb9\x25\xb0\xa2\x4f\x9f\x3a\x6b\xc9\x15\x26\x2e\x4e\x74\x28\x24\xfd\x29\xc7\x74\x6b\x82\xcd\x9e\xb9\x5e\x0b\x06\x7d\x72\xe4\x98\xee\xe4\xaf\x68\xa5\x21\x2d\xc1\xcc\x31\xc0\xfb\xd6\xa4\x90\x5a\xc1\x98\x1b\xac\x85\xf4\xe6\x0b\xf0\x20\x16\x94\x6b\x55\x8e\x70\x11\x40\xf5\x2b\x16\x41\xf5\x23\xf3\xa7\xec\xf7\x0e\xe4\xaa\xc6\x87\xd1\xb2\x78\x71\xd0\x1d\xd6\x24\x3c\x5e\x96\x6a\xe5\x16\xf3\x0d\xe8\xe3\xb9\xe5\xbb\x35\xc0\xf0\x58\xc9\x39\xe8\x3b\x21\xb7\x94\x6f\xf2\xad\xab\xac\x58\x56\x4d\x36\xe2\xb4\x9c\xe1\x98\xb9\x5b\x8e\x35\xdd\x81\x1b\xc0\xae\x4f\xea\xe6\xab\x9d\x47\x11\x7b\x60\xf3\x77\xc0\xed\xdb\x99\xd6\x33\x50\x79\xc1\x6f\xc6\x2c\xd3\x0c\x1e\x6c\x32\x27\x71\x5e\x40\x59\xa5\x1c\x28\xa7\xac\x2b\xd6\x6b\xa7\x27\x5b\xb4\xdd\xfc\x15\x63\x96\xf7\xf2\xe5\xa7\xc6\x5b\xbd\xda\x78\xe3\x9d\x6c\x31\xda\x74\xaf\xb6\x9e\x4f\xe1\x73\x99\x49\x22\x1c\x1f\xe2\x77\xf5\xc5\x73\x4b\x3f\x02\xae\x7e\x45\x79\x60\x32\xde\xe1\xf0\xea\x70\xaa\xb0\xb3\xca\xe7\x99\x91\xfc\xf5\x62\xa1\xfa\x80\x1c\x93\x22\x6b\xd5\x91\x7d\x14\xcf\x55\x92\x26\xc8\x1c\xd2\xad\x59\xaa\x6a\x24\xec\xd9\xe9\xb8\xfc\xb4\x9b\x4f\x0a\x5b\xa4\x0f\x69\xf2\xc7\xec\x1e\xfa\x5f\xca\xea\x33\xb4\x94\x22\x02\x1d\x42\xa2\x4c\x29\x2e\x29\x51\x39\xe1\xa4\xa8\x3d\x41\xa2\x8f\x93\x7a\x31\x0a\xd2\x4f\x1f\xa9\x1b\xf9\xfc\xb8\x9c\xef\xc3\xbd\xa9\xf2\x40\xbe\x2e\xa9\x59\xfa\x24\x03\xcd\xdc\xf4\x9f\xf7\xf7\x2f\x4e\x5f\xbc\x46\x9f\x21\x82\x39\x5a\x01\xc2\x7c\x8f\x84\x0e\x41\xa6\xd5\x21\xc2\x0a\xdd\x41\xad\x09\xc6\xe9\x65\x82\xcf\xc4\x06\x89\xf5\xfa\xf5\xa4\xe2\x2a\x48\x76\xcc\x33\x2d\x24\xfe\xd8\xa8\x64\x02\x58\xe3\x84\x69\xdf\x94\x24\x48\xc3\xbd\x9e\xc6\x0c\x53\xfe\xba\xfd\x50\x51\x03\xd7\xfe\x6a\xef\xb3\x04\xfb\x2b\x26\xc8\xb6\xc5\xa7\x5c\x8c\xa1\x4a\x4b\xf4\x65\xd1\x88\xa3\x13\x63\x00\xb7\x38\x40\xac\x48\xdc\xc2\x10\x27\x13\x5b\xdb\x90\x53\x79\x44\x30\x06\x44\xff\xf9\x2f\x0d\xaa\x4f\x93\xea\x7f\x16\x8d\x4d\xac\xdf\xe7\x77\x03\x2d\x71\x0b\xe0\x7d\xdd\x7a\xc3\x93\xac\x72\xfa\xd7\x93\xe6\x22\x9f\x72\x17\xf8\x3a\xbd\x25\x41\xe9\x8b\x8c\xe3\x36\x3f\xbb\x5f\xf1\xd3\x99\xfd\xbb\x3e\x9b\xcd\xc7\x77\xbd\x77\xdb\xbb\x36\xc8\x56\x6d\x68\x2f\x41\x27\x92\xa3\x17\xb3\x59\x57\xc9\x3c\x4c\x53\x80\x7a\x8f\xe3\xa1\x32\x10\xa4\x93\x3a\x82\x9a\x1c\x1d\x65\x8d\x58\x6e\xac\x81\x39\x17\x1a\x67\x35\xec\xa4\xd6\xd0\xb9\x06\xc7\xdc\x6d\xb2\x02\xc9\x41\x43\x0a\x6e\xf8\x4e\x39\x4c\xe0\xc0\x29\xce\x30\x9c\xbc\x09\x75\xca\xc7\xab\xe5\x31\xd6\x51\x6c\xb2\xf2\x9c\xb3\x55\x3a\xf5\xd5\xcc\x2d\x66\x6f\x93\x08\x9b\x29\x15\xff\x93\x50\xeb\xf8\xa4\x69\x9c\xf4\xfd\xef\x88\x51\x8a\x06\xdd\x94\x07\xc6\x0f\x6f\x25\x5e\xaf\x29\x59\x0a\x46\xc9\xde\x43\xef\x4c\x20\x4d\xb2\x4e\xb0\x3c\xfe\xc9\x96\x28\xb8\x97\x8d\x22\x7a\x35\x9b\xb4\xde\xec\xa2\xdb\xf3\x65\x71\xac\x82\xe5\x06\xf4\x32\x27\x9c\xcd\xba\xbc\x1c\xa5\x58\x83\xdf\xe9\xe9\xcb\x43\x19\x66\xa4\x0a\x4c\x6c\x8a\xfc\x2e\x04\xc7\xb1\x57\x14\x2b\x8e\x31\xc8\xa4\x68\x78\xde\xd5\x4e\xab\x8e\x73\x8b\x9a\x75\xab\xe3\x18\xe7\x0e\x56\xa1\x10\xdb\x03\x4d\x6d\xb1\x65\xc5\xe0\x41\xda\xcf\x52\xcb\x8f\x69\xdf\x3d\x61\x8c\xd5\xb4\xd4\xf6\x02\x62\x26\xf6\x11\xb4\x5a\x2e\x86\x57\x50\x34\xde\x36\x83\x66\xf2\x5b\x06\xc7\xac\x20\x21\x66\x94\x60\x95\x1d\xe3\x37\x65\x8f\x4c\x39\xf3\xae\xb6\x72\xcf\x66\x42\x14\x33\x5c\x3c\x29\x6e\x9f\x49\x75\x22\x38\xed\x59\xf3\xc0\xd9\x60\x0d\x77\x78\xef\x21\xe0\xf5\xbb\x8d\x3a\xd4\xa7\xf1\x95\xda\xf7\xc4\xa4\xc0\x93\x1e\x12\x45\x24\x36\x3e\x75\xa2\x65\x02\x05\x11\x6b\xc8\x6e\x97\xbe\x79\x38\x66\x32\x1b\xa6\xbc\xf1\xea\xd9\x74\x84\xbb\xf6\xd1\x74\x66\xf0\x6f\xae\x16\x6f\xfd\x8b\xb3\xdb\xb3\xaf\xce\x6e\xde\xb4\x12\xd6\x0e\xb3\xc4\x08\x24\xd6\xeb\x93\xfe\xc9\x8b\xb7\x97\x8b\xef\xfc\x7f\x5d\x5d\x7f\xf3\xe6\xda\x5f\x5e\x5f\x9d\xbf\xb9\xb9\x79\x73\xd3\xc3\x6a\x3e\xca\xe8\xeb\xdb\xdb\xa5\x7f\xb9\x38\x7f\xf7\xe1\xa2\x47\x9e\xa9\xd1\x7b\x5a\xaf\x67\xfa\x79\x9e\x5d\xbc\xbf\x5c\xf8\x67\xe7\x46\x28\xff\xdd\xd5\xdb\x1e\x8e\x01\xec\xa6\x4a\x07\x22\xd1\x63\xac\xde\x5c\x5f\x5f\x5d\x8f\x73\x02\x29\xc7\x38\xbd\xbb\xbc\xb9\x7d\xb3\xb0\xb3\x99\xbf\xf8\x5b\x9a\x3e\xe7\xde\xab\xd3\xd3\x53\x54\xe1\x99\x85\xdb\xf2\xfa\xea\xbb\x7f\x0f\x72\x2b\x52\xb1\x41\xcb\xbf\x56\xbf\x4e\x4f\x5f\x1a\xce\xe9\xcd\x4a\xfd\xe8\x8d\x46\x78\x93\x63\x93\xf7\xc2\xad\x5f\xe3\x32\xba\x06\xb2\x27\xac\x75\xf2\x14\x4b\xb8\xd1\x22\xee\x3c\xe5\xbd\x6f\x1e\xd9\x16\xfe\x19\x45\xd8\x7e\xac\xea\xa0\xe9\x8a\xf2\xa9\x0a\xad\xdf\x1c\xfb\xb3\x6a\x23\x26\xfa\x31\xa1\xba\x21\xe7\x0e\x38\x28\xb5\x94\x62\xd5\x92\x35\x7f\x51\x70\x5b\xde\xa0\xa3\x97\x9d\xb7\xf8\x6f\x41\x5b\xfe\xe4\x24\xf4\x8a\xda\x63\x62\x39\xdc\x44\xa6\xce\x69\x7d\x50\x24\x04\xb3\x4d\xc6\xa5\x5b\xb5\x1a\x35\xbd\xdd\x05\x30\xbc\xbf\x49\x6f\x83\x94\x87\xbe\x68\xda\x14\x24\x15\x41\xf9\xb1\x75\x9b\x9e\x3f\xb5\xa9\x69\xd1\x5c\x3b\x7f\xc8\x50\x4d\xaf\x7d\xed\x26\xdd\x42\x09\xd5\x86\x88\x12\x4b\x5a\xd9\x76\x8c\x59\x5f\xae\xe9\xe3\x5b\x65\x28\x0b\x5f\xa7\xed\xfd\x47\xf1\x36\x88\x6b\xe5\x9d\x37\x0f\x07\x72\x96\x80\x03\xfa\xec\x52\x3d\x2e\xa5\x80\x24\x92\xea\xfd\xb9\xe9\xaa\xee\x75\xfb\x46\x86\x9f\xa9\x0f\x0a\xa4\x59\xb2\xe1\x40\x3b\xc1\x92\x08\xde\x9b\xce\xb6\xe3\x7a\x91\x19\xcd\x2e\xe4\xa6\x65\x9e\x6b\xef\xa1\xb5\x72\x2f\x6f\x54\xe5\xa6\xc3\x75\xda\x6c\xcd\x05\xd7\xd2\xb4\x61\x6d\xac\x76\xd2\xd4\xea\x24\x92\x7d\x99\x5e\x3b\x7b\xd3\x69\xda\x08\xa6\xf7\x1f\x06\x91\x3b\xf4\x38\x88\x28\x77\x34\x53\x8e\xda\xd2\xd8\xd9\x81\xa4\xeb\x7d\x87\x2a\x4e\x56\x8c\xaa\xb0\xe8\xea\xbf\x34\x45\x84\x13\x40\x24\xa6\x8d\x32\xbb\xba\x50\xee\x49\xda\xcb\xab\x0b\x7f\x71\xf6\xde\x9a\x1f\xff\x21\x85\xe5\x0f\x28\xd6\x14\x58\xd0\xfa\xe3\x4c\xcb\x9d\x5e\xf7\x6f\x73\xca\xc9\xd9\x5e\x94\x77\xa3\xb5\xbf\x3f\xb7\xcb\x76\xb3\x3c\x3b\xff\xb5\x05\x4c\x6b\x45\x7b\x66\x73\x02\x41\xb6\x20\x9d\xaa\x73\xb2\xb8\x85\xbb\xa2\x5c\x4b\xbc\x37\xe5\x59\x8f\xe7\x78\x73\x77\xee\xce\xdb\x6b\x2c\x13\xc6\x8a\xce\xe7\x72\xbd\x10\x7a\x29\x41\x01\x7f\xc2\x1c\xf5\x93\x15\x51\xe6\xb3\x17\x5f\x9c\xfe\x8e\xb2\xd4\x60\xa4\x1e\x96\xb2\x5e\xd9\x53\x56\xb3\x51\xfa\xb5\xe1\xff\xf7\xbc\x5b\xaa\x71\x80\xb9\x18\x3c\xbb\x2c\x30\x5f\xb5\xfe\xb0\x3b\x3b\x9b\x69\x9a\x68\x14\xe2\x07\x48\xfe\x1f\x00\x00\xff\xff\x12\xb5\xd9\xfc\x62\x49\x00\x00"),
		},
		"/namespace.yaml": &vfsgen۰CompressedFileInfo{
			name:             "namespace.yaml",
			modTime:          time.Date(2021, 3, 16, 16, 17, 45, 565376693, time.UTC),
			uncompressedSize: 155,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x6c\xce\x31\x0e\xc2\x30\x10\x44\xd1\x7e\x4f\xb1\x17\x70\x10\xad\x0f\x41\x49\x3f\xd8\x53\x2c\xc1\xeb\x28\x5e\x68\xa2\xdc\x1d\x11\x21\x2a\xca\xd1\x93\x46\x5f\x52\x4a\x82\xc5\xae\x5c\x87\x75\xcf\xfa\x3a\xcb\x6c\x5e\xb3\x5e\xd0\x38\x16\x14\x4a\x63\xa0\x22\x90\x45\xd5\xd1\x98\x75\xdb\x74\xfa\xb9\xee\xfb\x17\x8e\xf9\x57\xe1\xde\x03\x61\xdd\xc7\xe7\x45\x75\x7e\x36\x4c\xd6\x4f\xc3\x2a\x0b\xd6\x64\x7e\x67\x89\xa3\x80\x8e\xdb\x83\x55\xde\x01\x00\x00\xff\xff\x65\x18\x8f\x9b\x9b\x00\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/kic"].(os.FileInfo),
		fs["/namespace.yaml"].(os.FileInfo),
	}
	fs["/kic"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/kic/kic.yaml"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
